/* style the background and the text color of the input ... */
.vue-tags-input {
    background: #324652;
    width: 100% !important;
    max-width: 100% !important;
    font-weight: bold !important;
}

.vue-tags-input .ti-new-tag-input {
    background: transparent;
    color: #b7c4c9;
}

.vue-tags-input .ti-input {
    padding: 4px 10px;
    transition: border-bottom 200ms ease;
}

/* we cange the border color if the user focuses the input */
.vue-tags-input.ti-focus .ti-input {
    /*border: 1px solid #ebde6e;*/
    border: 1px solid #b8daff;
    background-color: #cce5ff;
}

/* some stylings for the autocomplete layer */
.vue-tags-input .ti-autocomplete {
    background: #283944;
    border: 1px solid #8b9396;
    border-top: none;
}

/* the selected item in the autocomplete layer, should be highlighted */
.vue-tags-input .ti-item.ti-selected-item {
    background: #ebde6e;
    color: #283944;
}

/* style the placeholders color across all browser */
.vue-tags-input ::-webkit-input-placeholder {
    color: #a4b1b6;
}

.vue-tags-input ::-moz-placeholder {
    color: #a4b1b6;
}

.vue-tags-input :-ms-input-placeholder {
    color: #a4b1b6;
}

.vue-tags-input :-moz-placeholder {
    color: #a4b1b6;
}

/* default styles for all the tags */
.vue-tags-input .ti-tag {
    position: relative;
    background: #ebde6e;
    color: #283944;
    min-width: 130px;
    /*font-size: 1em !important;*/
    font-weight: bold !important;
}

.ti-content {
    min-width: 100px;
    padding: 2px 4px 2px 4px;
}

.ti-tag-center {
    width: 100%;
    padding: 2px 4px 2px 4px;
}

/* we defined a custom css class in the data model, now we are using it to style the tag */
.vue-tags-input .ti-tag.custom-class {
    background: transparent;
    border: 1px solid #ebde6e;
    color: #ebde6e;
    margin-right: 4px;
    border-radius: 0px;
    font-size: 13px;
}

/* the styles if a tag is invalid */
.vue-tags-input .ti-tag.ti-invalid {
    /*background-color: #e88a74 !important;*/
    background-color: #f8d7da !important;
    border: 1px solid #f5c6cb !important;
    color: #721c24 !important;
    font-weight: bold !important;
    border-radius: 2px !important;
}

input.ti-new-tag-input.ti-valid {
    color: #004085 !important;
    /*color: #fff !important;*/
    font-weight: bold !important;
}

/* if the user input is invalid, the input color should be red */
.vue-tags-input .ti-new-tag-input.ti-invalid {
    /*color: #e88a74;*/
    color: #721c24;
    font-weight: bold !important;
}

/* if a tag or the user input is a duplicate, it should be crossed out */
.vue-tags-input .ti-duplicate span,
.vue-tags-input .ti-new-tag-input.ti-duplicate {
    text-decoration: line-through;
}

/* if the user presses backspace, the complete tag should be crossed out, to mark it for deletion */
.vue-tags-input .ti-tag:after {
    transition: transform .2s;
    position: absolute;
    content: '';
    height: 2px;
    width: 108%;
    left: -4%;
    top: calc(50% - 1px);
    background-color: #000;
    transform: scaleX(0);
}

.vue-tags-input .ti-deletion-mark:after {
    transform: scaleX(1);
}

.ti-tag.ti-invalid, .ti-tag.ti-tag.ti-deletion-mark {
    background-color: #e54d42 !important;
    color: #fff !important;
}